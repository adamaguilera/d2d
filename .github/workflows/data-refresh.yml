name: Daily data refresh

on:
  schedule:
    # 10:00 America/New_York crosses DST; run at both UTC times and let script be idempotent
    - cron: '0 14 * * *' # 10:00 EDT
    - cron: '0 15 * * *' # 10:00 EST
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: data-refresh
  cancel-in-progress: false

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute branch date (America/New_York)
        id: date
        run: |
          echo "today=$(TZ=America/New_York date +%F)" >> $GITHUB_OUTPUT
          echo "stamp=$(TZ=America/New_York date +%F-%H-%M)" >> $GITHUB_OUTPUT

      - name: Resolve PR token
        run: |
          if [ -n "${{ secrets.CREATE_PR_TOKEN }}" ]; then
            echo "PR_TOKEN=${{ secrets.CREATE_PR_TOKEN }}" >> $GITHUB_ENV
          else
            echo "PR_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create or reuse PR branch (idempotent)
        run: |
          set -e
          BR=auto-${{ steps.date.outputs.stamp }}
          git fetch origin
          if git show-ref --verify --quiet refs/heads/$BR; then
            git checkout $BR
          elif git ls-remote --exit-code --heads origin $BR >/dev/null 2>&1; then
            git checkout -b $BR origin/$BR
          else
            git checkout -b $BR
            git commit --allow-empty -m "chore: prepare data refresh for ${{ steps.date.outputs.today }}"
            git push --set-upstream origin $BR
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: scripts/requirements.txt

      - name: Setup Chrome (for Selenium)
        uses: browser-actions/setup-chrome@v1

      - name: Show Chrome version
        run: |
          google-chrome --version || chromium --version || true

      - name: Create venv and install requirements
        working-directory: scripts
        run: |
          python -m venv venv
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run full extraction
        working-directory: scripts
        env:
          TZ: America/New_York
        run: |
          . venv/bin/activate
          python full_extraction.py --headless

      - name: Commit content changes to PR branch
        run: |
          BR=auto-${{ steps.date.outputs.stamp }}
          git checkout $BR
          git pull --ff-only || true
          git add content/** || true
          if ! git diff --cached --quiet; then
            git commit -m "data: auto-refresh content for ${{ steps.date.outputs.today }}"
            git push
          else
            echo "No content changes to commit."
          fi

      - name: Merge PR (squash) with PAT so downstream workflows run
        if: ${{ steps.ghpr.outputs.number != '' }}
        env:
          GH_TOKEN: ${{ env.PR_TOKEN }}
        run: |
          gh pr merge ${{ steps.ghpr.outputs.number }} --squash --delete-branch


